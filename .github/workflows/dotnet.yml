name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
env:
  config: Release
  disable_test_parallelization: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  pg_db: marten_testing
  pg_user: postgres

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: oskardudycz/postgres-plv8:12-2
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: ${{ env.pg_db }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
          - 1433:1433
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: P@55w0rd
          MSSQL_PID: Developer

    steps:
    - uses: actions/checkout@v2
    

    - name: Optimize database for running tests faster
      run: |
        PG_CONTAINER_NAME=$(docker ps --filter expose=5432/tcp --format {{.Names}})
        docker exec $PG_CONTAINER_NAME bash -c "echo -e '\nfsync = off' >> /var/lib/postgresql/data/postgresql.conf"
        docker container restart $PG_CONTAINER_NAME
      shell: bash
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
        include-prerelease: true
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      env:
        marten_testing_database: "Host=localhost;Port=5432;Database=${{ env.pg_db }};Username=${{ env.pg_user }}"
      run: dotnet test --no-build --verbosity normal
